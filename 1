> Task :system-tests:clean
> Task :system-tests:compileJava NO-SOURCE
> Task :system-tests:processResources NO-SOURCE
> Task :system-tests:classes UP-TO-DATE

> Task :system-tests:compileTestJava

> Task :system-tests:processTestResources NO-SOURCE
> Task :system-tests:testClasses

> Task :system-tests:test

BlobTransferIntegrationTest > transferBlob_success() STANDARD_OUT
    18:30:26.812 [Test worker] DEBUG com.azure.identity.EnvironmentCredential - Azure Identity => Found the following environment variables: 
    18:30:26.820 [Test worker] DEBUG com.azure.identity.EnvironmentCredential - Azure Identity => ERROR in EnvironmentCredential: Missing required environment variable AZURE_CLIENT_ID
    18:30:26.944 [Test worker] INFO com.azure.core.implementation.jackson.JacksonVersion - Package versions: jackson-annotations=2.13.1, jackson-core=2.13.1, jackson-databind=2.13.1, jackson-dataformat-xml=2.13.1, jackson-datatype-jsr310=2.13.1, azure-core=1.26.0, Troubleshooting version conflicts: https://aka.ms/azsdk/java/dependency/troubleshoot
    18:30:27.219 [Test worker] DEBUG reactor.util.Loggers - Using Slf4j logging framework
    18:30:27.248 [Test worker] DEBUG com.azure.identity.ManagedIdentityCredential - Azure Identity => Found the following environment variables: 
    18:30:27.249 [Test worker] DEBUG com.azure.identity.SharedTokenCacheCredential - Azure Identity => Found the following environment variables: 
    18:30:27.381 [Test worker] DEBUG com.azure.core.implementation.http.HttpClientProviders - Using com.azure.core.http.netty.NettyAsyncHttpClientProvider as the default HttpClientProvider.
    18:30:27.418 [Test worker] DEBUG io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework
    18:30:27.420 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
    18:30:27.420 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - Java version: 11
    18:30:27.422 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
    18:30:27.423 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
    18:30:27.423 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
    18:30:27.424 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
    18:30:27.424 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
    18:30:27.427 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6edc4161
    18:30:27.428 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, int): unavailable
    18:30:27.428 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available
    18:30:27.440 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - maxDirectMemory: 536870912 bytes (maybe)
    18:30:27.441 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/h3/sxgkvz7n4577kszc1rh421c00000gn/T (java.io.tmpdir)
    18:30:27.441 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
    18:30:27.441 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - Platform: MacOS
    18:30:27.442 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
    18:30:27.443 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
    18:30:27.444 [Test worker] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
    18:30:27.444 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
    18:30:27.456 [Test worker] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}
    18:30:27.456 [Test worker] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@425d5d46
    18:30:27.504 [Test worker] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
    18:30:27.504 [Test worker] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
    18:30:27.614 [Test worker] INFO com.azure.security.keyvault.secrets.SecretAsyncClient - Listing secrets
    18:30:27.649 [Test worker] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
    18:30:27.649 [Test worker] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
    18:30:27.654 [Test worker] DEBUG io.netty.util.NetUtilInitializations - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
    18:30:27.655 [Test worker] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
    18:30:27.675 [Test worker] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.workdir: /var/folders/h3/sxgkvz7n4577kszc1rh421c00000gn/T (io.netty.tmpdir)
    18:30:27.676 [Test worker] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.deleteLibAfterLoading: true
    18:30:27.677 [Test worker] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.tryPatchShadedId: true
    18:30:27.677 [Test worker] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.detectNativeLibraryDuplicates: true
    18:30:28.179 [Test worker] DEBUG io.netty.util.internal.NativeLibraryLoader - Successfully loaded the library /var/folders/h3/sxgkvz7n4577kszc1rh421c00000gn/T/libnetty_tcnative_osx_x86_648627217777721361109.dylib
    18:30:28.181 [Test worker] DEBUG io.netty.util.internal.NativeLibraryLoader - Loaded library with name 'netty_tcnative_osx_x86_64'
    18:30:28.181 [Test worker] DEBUG io.netty.handler.ssl.OpenSsl - Initialize netty-tcnative using engine: 'default'
    18:30:28.181 [Test worker] DEBUG io.netty.handler.ssl.OpenSsl - netty-tcnative using native library: BoringSSL
    18:30:28.274 [Test worker] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
    18:30:28.274 [Test worker] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
    18:30:28.276 [Test worker] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@50d951e7
    18:30:28.291 [Test worker] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
    18:30:28.293 [Test worker] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
    18:30:28.294 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 5
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 5
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 11
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 16777216
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: true
    18:30:28.295 [Test worker] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
    18:30:28.301 [Test worker] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
    18:30:28.301 [Test worker] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
    18:30:28.301 [Test worker] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
    18:30:28.305 [Test worker] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@64f16277
    18:30:28.310 [Test worker] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
    18:30:28.310 [Test worker] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
    18:30:28.310 [Test worker] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
    18:30:28.310 [Test worker] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
    18:30:28.320 [Test worker] DEBUG io.netty.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
    18:30:28.336 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 => ECDHE-ECDSA-AES128-GCM-SHA256
    18:30:28.336 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 => ECDHE-ECDSA-AES128-GCM-SHA256
    18:30:28.337 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 => ECDHE-RSA-AES128-GCM-SHA256
    18:30:28.337 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_AES_128_GCM_SHA256 => ECDHE-RSA-AES128-GCM-SHA256
    18:30:28.337 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 => ECDHE-ECDSA-AES256-GCM-SHA384
    18:30:28.337 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 => ECDHE-ECDSA-AES256-GCM-SHA384
    18:30:28.337 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 => ECDHE-RSA-AES256-GCM-SHA384
    18:30:28.337 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_AES_256_GCM_SHA384 => ECDHE-RSA-AES256-GCM-SHA384
    18:30:28.337 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-ECDSA-CHACHA20-POLY1305
    18:30:28.337 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-ECDSA-CHACHA20-POLY1305
    18:30:28.338 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-RSA-CHACHA20-POLY1305
    18:30:28.338 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-RSA-CHACHA20-POLY1305
    18:30:28.338 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-PSK-CHACHA20-POLY1305
    18:30:28.338 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-PSK-CHACHA20-POLY1305
    18:30:28.338 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA => ECDHE-ECDSA-AES128-SHA
    18:30:28.338 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_AES_128_CBC_SHA => ECDHE-ECDSA-AES128-SHA
    18:30:28.339 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA => ECDHE-RSA-AES128-SHA
    18:30:28.339 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA => ECDHE-RSA-AES128-SHA
    18:30:28.339 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA => ECDHE-PSK-AES128-CBC-SHA
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_PSK_WITH_AES_128_CBC_SHA => ECDHE-PSK-AES128-CBC-SHA
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA => ECDHE-ECDSA-AES256-SHA
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_AES_256_CBC_SHA => ECDHE-ECDSA-AES256-SHA
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA => ECDHE-RSA-AES256-SHA
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA => ECDHE-RSA-AES256-SHA
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA => ECDHE-PSK-AES256-CBC-SHA
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_PSK_WITH_AES_256_CBC_SHA => ECDHE-PSK-AES256-CBC-SHA
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_AES_128_GCM_SHA256 => AES128-GCM-SHA256
    18:30:28.340 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_AES_128_GCM_SHA256 => AES128-GCM-SHA256
    18:30:28.341 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_AES_256_GCM_SHA384 => AES256-GCM-SHA384
    18:30:28.341 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_AES_256_GCM_SHA384 => AES256-GCM-SHA384
    18:30:28.341 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_AES_128_CBC_SHA => AES128-SHA
    18:30:28.341 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_AES_128_CBC_SHA => AES128-SHA
    18:30:28.342 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_PSK_WITH_AES_128_CBC_SHA => PSK-AES128-CBC-SHA
    18:30:28.342 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_PSK_WITH_AES_128_CBC_SHA => PSK-AES128-CBC-SHA
    18:30:28.342 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_AES_256_CBC_SHA => AES256-SHA
    18:30:28.342 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_AES_256_CBC_SHA => AES256-SHA
    18:30:28.342 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_PSK_WITH_AES_256_CBC_SHA => PSK-AES256-CBC-SHA
    18:30:28.342 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_PSK_WITH_AES_256_CBC_SHA => PSK-AES256-CBC-SHA
    18:30:28.342 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_3DES_EDE_CBC_SHA => DES-CBC3-SHA
    18:30:28.342 [Test worker] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_3DES_EDE_CBC_SHA => DES-CBC3-SHA
    18:30:28.343 [Test worker] DEBUG io.netty.handler.ssl.OpenSsl - Supported protocols (OpenSSL): [SSLv2Hello, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3] 
    18:30:28.343 [Test worker] DEBUG io.netty.handler.ssl.OpenSsl - Default cipher suites (OpenSSL): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_CHACHA20_POLY1305_SHA256]
    18:30:28.441 [Test worker] DEBUG reactor.netty.resources.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [kv313company1.vault.azure.net:443]
    18:30:28.456 [Test worker] DEBUG reactor.netty.resources.DefaultLoopIOUring - Default io_uring support : false
    18:30:28.465 [Test worker] DEBUG reactor.netty.resources.DefaultLoopEpoll - Default Epoll support : false
    18:30:28.563 [Test worker] DEBUG io.netty.util.internal.NativeLibraryLoader - Successfully loaded the library /var/folders/h3/sxgkvz7n4577kszc1rh421c00000gn/T/libnetty_transport_native_kqueue_x86_6416545948123399240317.dylib
    18:30:28.566 [Test worker] DEBUG reactor.netty.resources.DefaultLoopKQueue - Default KQueue support : true
    18:30:28.570 [Test worker] DEBUG io.netty.channel.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
    18:30:28.674 [Test worker] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 17126 (auto-detected)
    18:30:28.688 [Test worker] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: f8:4d:89:ff:fe:85:5c:39 (auto-detected)
    18:30:28.753 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [4ead16de] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
    18:30:28.787 [reactor-http-kqueue-1] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@691398cf
    18:30:28.803 [reactor-http-kqueue-1] DEBUG reactor.netty.tcp.SslProvider - [4ead16de] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@6fa61e7d and SNI kv313company1.vault.azure.net:443
    18:30:28.822 [reactor-http-kqueue-1] DEBUG reactor.netty.transport.TransportConfig - [4ead16de] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:28.942 [reactor-http-kqueue-1] DEBUG reactor.netty.transport.TransportConnector - [4ead16de] Connecting to [kv313company1.vault.azure.net/52.146.137.168:443].
    18:30:28.985 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Registering pool release on close event for channel
    18:30:28.987 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Channel connected, now: 1 active connections, 0 inactive connections and 0 pending acquire requests.
    18:30:29.246 [reactor-http-kqueue-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] HANDSHAKEN: protocol:TLSv1.2 cipher suite:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    18:30:29.248 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}, [connected])
    18:30:29.258 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [configured])
    18:30:29.260 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientConnect - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Handler is being applied: {uri=https://kv313company1.vault.azure.net/secrets?maxresults=25&api-version=7.1, method=GET}
    18:30:29.263 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [request_prepared])
    18:30:29.282 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureWriteTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureWriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:29.290 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [request_sent])
    18:30:29.290 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureWriteTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:29.291 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureResponseTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureResponseTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:29.342 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientOperations - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Received response (auto-read:false) : [Cache-Control=no-cache, Pragma=no-cache, Content-Type=application/json; charset=utf-8, Expires=-1, WWW-Authenticate=Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47", resource="https://vault.azure.net", x-ms-keyvault-region=northeurope, x-ms-request-id=bd9cca02-5d03-474d-bb64-b29c20db24c6, x-ms-keyvault-service-version=1.9.378.1, x-ms-keyvault-network-info=conn_type=Ipv4;addr=31.165.176.114;act_addr_fam=InterNetwork;, X-Content-Type-Options=nosniff, Strict-Transport-Security=max-age=31536000;includeSubDomains, Date=Thu, 28 Apr 2022 16:30:28 GMT, content-length=97]
    18:30:29.342 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [response_received])
    18:30:29.342 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureResponseTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:29.343 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureReadTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureReadTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:29.356 [reactor-http-kqueue-1] DEBUG reactor.netty.channel.FluxReceive - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] FluxReceive{pending=0, cancelled=false, inboundDone=false, inboundError=null}: subscribing inbound receiver
    18:30:29.358 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientOperations - [4ead16de-1, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Received last HTTP packet
    18:30:29.371 [reactor-http-kqueue-1] DEBUG com.azure.identity.EnvironmentCredential - EnvironmentCredential authentication unavailable. Environment variables are not fully configured.To mitigate this issue, please refer to the troubleshooting guidelines here at https://aka.ms/azsdk/net/identity/environmentcredential/troubleshoot
    com.azure.identity.CredentialUnavailableException: EnvironmentCredential authentication unavailable. Environment variables are not fully configured.To mitigate this issue, please refer to the troubleshooting guidelines here at https://aka.ms/azsdk/net/identity/environmentcredential/troubleshoot
    	at com.azure.identity.EnvironmentCredential.getToken(EnvironmentCredential.java:129)
    	at com.azure.identity.ChainedTokenCredential.lambda$getToken$2(ChainedTokenCredential.java:71)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:386)
    	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
    	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:371)
    	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
    	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
    	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
    	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
    	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
    	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
    	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
    	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
    	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
    	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:174)
    	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
    	at reactor.core.publisher.Operators$MonoInnerProducerBase.complete(Operators.java:2664)
    	at reactor.core.publisher.MonoSingle$SingleSubscriber.onComplete(MonoSingle.java:180)
    	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
    	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)
    	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:145)
    	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)
    	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
    	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
    	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
    	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:269)
    	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)
    	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)
    	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)
    	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:702)
    	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
    	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
    	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
    	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)
    	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)
    	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
    	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
    	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1372)
    	at io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1246)
    	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1286)
    	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)
    	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)
    	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
    	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
    	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
    	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
    	at io.netty.channel.kqueue.AbstractKQueueStreamChannel$KQueueStreamUnsafe.readReady(AbstractKQueueStreamChannel.java:544)
    	at io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe.readReady(AbstractKQueueChannel.java:383)
    	at io.netty.channel.kqueue.KQueueEventLoop.processReady(KQueueEventLoop.java:211)
    	at io.netty.channel.kqueue.KQueueEventLoop.run(KQueueEventLoop.java:289)
    	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
    	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
    	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
    	at java.base/java.lang.Thread.run(Thread.java:829)
    18:30:29.373 [reactor-http-kqueue-1] INFO com.azure.identity.ChainedTokenCredential - Azure Identity => Attempted credential EnvironmentCredential is unavailable.
    18:30:30.902 [reactor-http-kqueue-1] DEBUG com.azure.identity.implementation.IdentityClient - ManagedIdentityCredential authentication unavailable. Connection to IMDS endpoint cannot be established, connect timed out.
    com.azure.identity.CredentialUnavailableException: ManagedIdentityCredential authentication unavailable. Connection to IMDS endpoint cannot be established, connect timed out.
    	at com.azure.identity.implementation.IdentityClient.lambda$checkIMDSAvailable$58(IdentityClient.java:1420)
    	at reactor.core.publisher.MonoCallable.call(MonoCallable.java:92)
    	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:127)
    	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
    	at reactor.core.publisher.Mono.subscribe(Mono.java:4385)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
    	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
    	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:371)
    	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
    	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
    	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
    	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
    	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
    	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
    	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
    	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
    	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
    	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:174)
    	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
    	at reactor.core.publisher.Operators$MonoInnerProducerBase.complete(Operators.java:2664)
    	at reactor.core.publisher.MonoSingle$SingleSubscriber.onComplete(MonoSingle.java:180)
    	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
    	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)
    	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete(FluxDoFinally.java:145)
    	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)
    	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
    	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
    	at reactor.core.publisher.FluxHandle$HandleSubscriber.onComplete(FluxHandle.java:213)
    	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:269)
    	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)
    	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)
    	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)
    	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:702)
    	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
    	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
    	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
    	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)
    	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)
    	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
    	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
    	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1372)
    	at io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1246)
    	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1286)
    	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)
    	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)
    	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
    	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
    	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
    	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
    	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
    	at io.netty.channel.kqueue.AbstractKQueueStreamChannel$KQueueStreamUnsafe.readReady(AbstractKQueueStreamChannel.java:544)
    	at io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe.readReady(AbstractKQueueChannel.java:383)
    	at io.netty.channel.kqueue.KQueueEventLoop.processReady(KQueueEventLoop.java:211)
    	at io.netty.channel.kqueue.KQueueEventLoop.run(KQueueEventLoop.java:289)
    	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
    	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
    	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
    	at java.base/java.lang.Thread.run(Thread.java:829)
    Caused by: java.net.SocketTimeoutException: connect timed out
    	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
    	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
    	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
    	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
    	at java.base/java.net.Socket.connect(Socket.java:615)
    	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
    	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
    	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
    	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
    	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
    	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
    	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1258)
    	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1192)
    	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1086)
    	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1020)
    	at com.azure.identity.implementation.IdentityClient.lambda$checkIMDSAvailable$58(IdentityClient.java:1414)
    	... 65 common frames omitted
    18:30:30.924 [reactor-http-kqueue-1] DEBUG com.azure.identity.ManagedIdentityCredential - Azure Identity => ERROR in getToken() call for scopes [https://vault.azure.net/.default]: ManagedIdentityCredential authentication unavailable. Connection to IMDS endpoint cannot be established, connect timed out.
    18:30:30.927 [reactor-http-kqueue-1] INFO com.azure.identity.ChainedTokenCredential - Azure Identity => Attempted credential ManagedIdentityCredential is unavailable.
    18:30:31.081 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [response_completed])
    18:30:31.082 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureReadTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:31.080 [ForkJoinPool.commonPool-worker-3] DEBUG com.azure.identity.implementation.IdentityClient - SharedTokenCacheCredential authentication unavailable. No accounts were found in the cache.
    com.azure.identity.CredentialUnavailableException: SharedTokenCacheCredential authentication unavailable. No accounts were found in the cache.
    	at com.azure.identity.implementation.IdentityClient.lambda$authenticateWithSharedTokenCache$49(IdentityClient.java:978)
    	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
    	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
    	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
    	at reactor.core.publisher.MonoCompletionStage.lambda$subscribe$0(MonoCompletionStage.java:83)
    	at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859)
    	at java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837)
    	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
    	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
    	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
    	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
    	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
    	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
    	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
    	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
    18:30:31.082 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureWriteTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:31.083 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureResponseTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:31.083 [ForkJoinPool.commonPool-worker-3] DEBUG com.azure.identity.SharedTokenCacheCredential - Azure Identity => ERROR in getToken() call for scopes [https://vault.azure.net/.default]: SharedTokenCacheCredential authentication unavailable. No accounts were found in the cache.
    18:30:31.083 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureReadTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:31.083 [ForkJoinPool.commonPool-worker-3] INFO com.azure.identity.ChainedTokenCredential - Azure Identity => Attempted credential SharedTokenCacheCredential is unavailable.
    18:30:31.084 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [disconnecting])
    18:30:31.085 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Releasing channel
    18:30:31.087 [ForkJoinPool.commonPool-worker-3] DEBUG com.azure.identity.implementation.IdentityClient - IntelliJ Authentication not available. Please log in with Azure Tools for IntelliJ plugin in the IDE.
    com.azure.identity.CredentialUnavailableException: IntelliJ Authentication not available. Please log in with Azure Tools for IntelliJ plugin in the IDE.
    	at com.azure.identity.implementation.IdentityClient.authenticateWithIntelliJ(IdentityClient.java:349)
    	at com.azure.identity.IntelliJCredential.lambda$getToken$2(IntelliJCredential.java:87)
    	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
    	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
    	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
    	at reactor.core.publisher.Operators.complete(Operators.java:137)
    	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
    	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
    	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
    	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
    	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:790)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:894)
    	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:997)
    	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
    	at reactor.core.publisher.Operators.complete(Operators.java:137)
    	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
    	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
    	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
    	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:234)
    	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
    	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:903)
    	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
    	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2063)
    	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
    	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
    	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
    	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
    	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
    	at reactor.core.publisher.MonoCompletionStage.lambda$subscribe$0(MonoCompletionStage.java:83)
    	at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859)
    	at java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837)
    	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
    	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
    	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
    	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
    	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
    	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
    	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
    	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
    18:30:31.087 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Channel cleaned, now: 0 active connections, 1 inactive connections and 0 pending acquire requests.
    18:30:31.088 [ForkJoinPool.commonPool-worker-3] DEBUG com.azure.identity.IntelliJCredential - Azure Identity => ERROR in getToken() call for scopes [https://vault.azure.net/.default]: IntelliJ Authentication not available. Please log in with Azure Tools for IntelliJ plugin in the IDE.
    18:30:31.088 [ForkJoinPool.commonPool-worker-3] INFO com.azure.identity.ChainedTokenCredential - Azure Identity => Attempted credential IntelliJCredential is unavailable.
    18:30:31.237 [ForkJoinPool.commonPool-worker-3] DEBUG com.azure.identity.implementation.IdentityClient - Failed to read Vs Code credentials from Mac Native Key Chain.
    com.azure.identity.CredentialUnavailableException: Failed to read Vs Code credentials from Mac Native Key Chain.
    	at com.azure.identity.implementation.VisualStudioCacheAccessor.getCredentials(VisualStudioCacheAccessor.java:120)
    	at com.azure.identity.implementation.IdentityClient.authenticateWithVsCodeCredential(IdentityClient.java:850)
    	at com.azure.identity.VisualStudioCodeCredential.lambda$getToken$2(VisualStudioCodeCredential.java:77)
    	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
    	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
    	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
    	at reactor.core.publisher.Operators.complete(Operators.java:137)
    	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
    	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
    	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)
    	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
    	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:790)
    	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:894)
    	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:997)
    	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2058)
    	at reactor.core.publisher.Operators.complete(Operators.java:137)
    	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)
    	at reactor.core.publisher.Mono.subscribe(Mono.java:4400)
    	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
    	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:234)
    	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
    	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:903)
    	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
    	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2063)
    	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
    	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
    	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:142)
    	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
    	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
    	at reactor.core.publisher.MonoCompletionStage.lambda$subscribe$0(MonoCompletionStage.java:83)
    	at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859)
    	at java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837)
    	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
    	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705)
    	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1692)
    	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
    	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
    	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
    	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
    	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
    Caused by: java.lang.NullPointerException: null
    	at java.base/java.lang.String.<init>(String.java:561)
    	at com.azure.identity.implementation.VisualStudioCacheAccessor.getCredentials(VisualStudioCacheAccessor.java:118)
    	... 41 common frames omitted
    18:30:31.240 [ForkJoinPool.commonPool-worker-3] DEBUG com.azure.identity.VisualStudioCodeCredential - Azure Identity => ERROR in getToken() call for scopes [https://vault.azure.net/.default]: Failed to read Vs Code credentials from Mac Native Key Chain.
    18:30:31.241 [ForkJoinPool.commonPool-worker-3] INFO com.azure.identity.ChainedTokenCredential - Azure Identity => Attempted credential VisualStudioCodeCredential is unavailable.
    18:30:31.900 [ForkJoinPool.commonPool-worker-3] DEBUG com.azure.identity.implementation.IdentityClient - Azure CLI Authentication => A token response was received from Azure CLI, deserializing the response into an Access Token.
    18:30:31.928 [ForkJoinPool.commonPool-worker-3] INFO com.azure.identity.AzureCliCredential - Azure Identity => getToken() result for scopes [https://vault.azure.net/.default]: SUCCESS
    18:30:31.928 [ForkJoinPool.commonPool-worker-3] INFO com.azure.identity.ChainedTokenCredential - Azure Identity => Attempted credential AzureCliCredential returns a token
    18:30:31.931 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Channel acquired, now: 1 active connections, 0 inactive connections and 0 pending acquire requests.
    18:30:31.931 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientConnect - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Handler is being applied: {uri=https://kv313company1.vault.azure.net/secrets?maxresults=25&api-version=7.1, method=GET}
    18:30:31.931 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [request_prepared])
    18:30:31.932 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureWriteTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureWriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:31.935 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [request_sent])
    18:30:31.936 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureWriteTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:31.937 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureResponseTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureResponseTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:32.039 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientOperations - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Received response (auto-read:false) : [Cache-Control=no-cache, Pragma=no-cache, Content-Type=application/json; charset=utf-8, Expires=-1, x-ms-keyvault-region=northeurope, x-ms-request-id=862cd31f-48d9-493b-8282-18a3fdfd4913, x-ms-keyvault-service-version=1.9.378.1, x-ms-keyvault-network-info=conn_type=Ipv4;addr=31.165.176.114;act_addr_fam=InterNetwork;, x-ms-keyvault-rbac-assignment-id=20abed17-d0dd-4122-a234-d30110df4965, x-ms-keyvault-rbac-cache=ra_age=2800;da_age=436;rd_age=436;brd_age=2384;ra_notif_age=3099;dec_lev=2;, X-Content-Type-Options=nosniff, Strict-Transport-Security=max-age=31536000;includeSubDomains, Date=Thu, 28 Apr 2022 16:30:31 GMT, content-length=713]
    18:30:32.039 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [response_received])
    18:30:32.039 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureResponseTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.039 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureReadTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureReadTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:32.039 [reactor-http-kqueue-1] DEBUG reactor.netty.channel.FluxReceive - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] FluxReceive{pending=0, cancelled=false, inboundDone=false, inboundError=null}: subscribing inbound receiver
    18:30:32.039 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientOperations - [4ead16de-2, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Received last HTTP packet
    18:30:32.100 [reactor-http-kqueue-1] INFO com.azure.security.keyvault.secrets.SecretAsyncClient - Listed secrets
    18:30:32.100 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [response_completed])
    18:30:32.101 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureReadTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.101 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureWriteTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.101 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureResponseTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.101 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureReadTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.101 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets?maxresults=25&api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [disconnecting])
    18:30:32.101 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Releasing channel
    18:30:32.101 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Channel cleaned, now: 0 active connections, 1 inactive connections and 0 pending acquire requests.
    18:30:32.111 [Test worker] INFO com.azure.security.keyvault.secrets.SecretAsyncClient - Retrieving secret - 313company1assets-key1
    18:30:32.114 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Channel acquired, now: 1 active connections, 0 inactive connections and 0 pending acquire requests.
    18:30:32.115 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientConnect - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Handler is being applied: {uri=https://kv313company1.vault.azure.net/secrets/313company1assets-key1/?api-version=7.1, method=GET}
    18:30:32.115 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [request_prepared])
    18:30:32.115 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureWriteTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureWriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:32.117 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [request_sent])
    18:30:32.117 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureWriteTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.117 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureResponseTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureResponseTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:32.167 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientOperations - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Received response (auto-read:false) : [Cache-Control=no-cache, Pragma=no-cache, Content-Type=application/json; charset=utf-8, Expires=-1, WWW-Authenticate=Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47", resource="https://vault.azure.net", x-ms-keyvault-region=northeurope, x-ms-request-id=17b6ff02-84b5-40fb-8d56-539e8b6be90c, x-ms-keyvault-service-version=1.9.378.1, x-ms-keyvault-network-info=conn_type=Ipv4;addr=31.165.176.114;act_addr_fam=InterNetwork;, X-Content-Type-Options=nosniff, Strict-Transport-Security=max-age=31536000;includeSubDomains, Date=Thu, 28 Apr 2022 16:30:31 GMT, content-length=97]
    18:30:32.168 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [response_received])
    18:30:32.169 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureResponseTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.169 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureReadTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureReadTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:32.169 [reactor-http-kqueue-1] DEBUG reactor.netty.channel.FluxReceive - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] FluxReceive{pending=0, cancelled=false, inboundDone=false, inboundError=null}: subscribing inbound receiver
    18:30:32.169 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientOperations - [4ead16de-3, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Received last HTTP packet
    18:30:32.171 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [a46f4e48] Created a new pooled channel, now: 1 active connections, 0 inactive connections and 0 pending acquire requests.
    18:30:32.172 [reactor-http-kqueue-1] DEBUG reactor.netty.tcp.SslProvider - [a46f4e48] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@42904c52 and SNI kv313company1.vault.azure.net:443
    18:30:32.173 [reactor-http-kqueue-1] DEBUG reactor.netty.transport.TransportConfig - [a46f4e48] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.173 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [response_completed])
    18:30:32.173 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureReadTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.173 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureWriteTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.173 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureResponseTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.173 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureReadTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.173 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0x4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [disconnecting])
    18:30:32.174 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Releasing channel
    18:30:32.174 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [4ead16de, L:/192.168.1.187:58344 - R:kv313company1.vault.azure.net/52.146.137.168:443] Channel cleaned, now: 0 active connections, 1 inactive connections and 0 pending acquire requests.
    18:30:32.174 [reactor-http-kqueue-1] DEBUG reactor.netty.transport.TransportConnector - [a46f4e48] Connecting to [kv313company1.vault.azure.net/52.146.137.168:443].
    18:30:32.226 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Registering pool release on close event for channel
    18:30:32.227 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Channel connected, now: 1 active connections, 1 inactive connections and 0 pending acquire requests.
    18:30:32.351 [reactor-http-kqueue-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xa46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] HANDSHAKEN: protocol:TLSv1.2 cipher suite:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    18:30:32.352 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(PooledConnection{channel=[id: 0xa46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443]}, [connected])
    18:30:32.352 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xa46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [configured])
    18:30:32.352 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientConnect - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Handler is being applied: {uri=https://kv313company1.vault.azure.net/secrets/313company1assets-key1/?api-version=7.1, method=GET}
    18:30:32.352 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0xa46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [request_prepared])
    18:30:32.352 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureWriteTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureWriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:32.355 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0xa46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [request_sent])
    18:30:32.355 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureWriteTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.355 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureResponseTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureResponseTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:32.492 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientOperations - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Received response (auto-read:false) : [Cache-Control=no-cache, Pragma=no-cache, Content-Type=application/json; charset=utf-8, Expires=-1, x-ms-keyvault-region=northeurope, x-ms-request-id=aedba824-e694-43d0-89b2-1561a0611844, x-ms-keyvault-service-version=1.9.378.1, x-ms-keyvault-network-info=conn_type=Ipv4;addr=31.165.176.114;act_addr_fam=InterNetwork;, x-ms-keyvault-rbac-assignment-id=20abed17-d0dd-4122-a234-d30110df4965, x-ms-keyvault-rbac-cache=ra_age=2801;da_age=437;rd_age=437;brd_age=2384;ra_notif_age=3100;dec_lev=2;, X-Content-Type-Options=nosniff, Strict-Transport-Security=max-age=31536000;includeSubDomains, Date=Thu, 28 Apr 2022 16:30:32 GMT, content-length=378]
    18:30:32.492 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0xa46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [response_received])
    18:30:32.492 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureResponseTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.492 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Added decoder [azureReadTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.sslHandler, reactor.left.httpCodec, azureReadTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
    18:30:32.493 [reactor-http-kqueue-1] DEBUG reactor.netty.channel.FluxReceive - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] FluxReceive{pending=0, cancelled=false, inboundDone=false, inboundError=null}: subscribing inbound receiver
    18:30:32.494 [reactor-http-kqueue-1] DEBUG reactor.netty.http.client.HttpClientOperations - [a46f4e48-1, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Received last HTTP packet
    18:30:32.516 [reactor-http-kqueue-1] INFO com.azure.security.keyvault.secrets.SecretAsyncClient - Retrieved secret - 313company1assets-key1
    18:30:32.517 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0xa46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [response_completed])
    18:30:32.518 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Removed handler: azureReadTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.518 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureWriteTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.518 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureResponseTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.518 [reactor-http-kqueue-1] DEBUG reactor.netty.ReactorNetty - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Non Removed handler: azureReadTimeoutHandler, context: null, pipeline: DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
    18:30:32.518 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] onStateChange(GET{uri=/secrets/313company1assets-key1/?api-version=7.1, connection=PooledConnection{channel=[id: 0xa46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443]}}, [disconnecting])
    18:30:32.518 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.DefaultPooledConnectionProvider - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Releasing channel
    18:30:32.518 [reactor-http-kqueue-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [a46f4e48, L:/192.168.1.187:58347 - R:kv313company1.vault.azure.net/52.146.137.168:443] Channel cleaned, now: 0 active connections, 2 inactive connections and 0 pending acquire requests.
    18:30:32.819 [Test worker] INFO io.gatling.core.config.GatlingConfiguration$ - Gatling will try to load 'gatling.conf' config file as ClassLoader resource.
    18:30:33.347 [GatlingSystem-akka.actor.default-dispatcher-5] INFO akka.event.slf4j.Slf4jLogger - Slf4jLogger started
    18:30:33.683 [Test worker] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
    18:30:33.684 [Test worker] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
    18:30:34.214 [Test worker] DEBUG io.gatling.http.engine.HttpEngine - Start warm up
    18:30:34.560 [gatling-2-1] DEBUG io.gatling.http.client.pool.ChannelPool - No channel in the pool for key ChannelPoolKey{clientId=0, remoteKey=RemoteKey{targetHostBaseUrl='https://gatling.io', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:34.575 [gatling-2-1] DEBUG io.gatling.http.client.impl.DefaultHttpClient - Opening new channel
    18:30:35.568 [Test worker] DEBUG io.gatling.http.engine.HttpEngine - Couldn't execute warm up request https://gatling.io
    io.gatling.http.client.impl.RequestTimeoutException: Request timeout after 1000 ms
    18:30:35.584 [Test worker] DEBUG io.gatling.http.engine.HttpEngine - Warm up done
    18:30:35.674 [Test worker] DEBUG io.gatling.http.cache.Http2PriorKnowledgeSupport$ - HTTP/2 disabled
    Simulation org.eclipse.dataspaceconnector.system.tests.local.BlobTransferLocalSimulation started...
    18:30:35.688 [GatlingSystem-akka.actor.default-dispatcher-5] INFO io.gatling.core.stats.writer.ConsoleDataWriter - Initializing
    18:30:35.690 [GatlingSystem-akka.actor.default-dispatcher-7] INFO io.gatling.core.stats.writer.LogFileDataWriter - Initializing
    18:30:35.703 [GatlingSystem-akka.actor.default-dispatcher-5] INFO io.gatling.core.stats.writer.ConsoleDataWriter - Initialized
    18:30:35.728 [GatlingSystem-akka.actor.default-dispatcher-7] INFO io.gatling.core.stats.writer.LogFileDataWriter - Initialized
    18:30:35.741 [GatlingSystem-akka.actor.default-dispatcher-9] INFO io.gatling.core.controller.inject.Injector - Scenario [Contract negotiation and file transfer] has finished injecting
    18:30:35.743 [GatlingSystem-akka.actor.default-dispatcher-9] INFO io.gatling.core.controller.inject.Injector - Injecting is done
    18:30:35.767 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Initiate contract negotiation uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/contractnegotiations: scenario=[Contract negotiation and file transfer], userId=1
    18:30:35.770 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - No channel in the pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:35.771 [gatling-2-2] DEBUG io.gatling.http.client.impl.DefaultHttpClient - Opening new channel
    18:30:35.774 [gatling-2-2] DEBUG io.gatling.core.controller.inject.open.OpenWorkload - Start user #1
    18:30:35.813 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledHeapByteBuf(ridx: 0, widx: 705, cap: 705/705))
    POST /api/v1/data/contractnegotiations HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191
    content-type: application/json
    content-length: 705, content=null}
    18:30:36.005 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:36 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 45'
    18:30:36.006 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 45, cap: 45/45, unwrapped: PooledUnsafeDirectByteBuf(ridx: 176, widx: 176, cap: 2048)), decoderResult: success)'
    18:30:36.007 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:36.089 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407: scenario=[Contract negotiation and file transfer], userId=1
    18:30:36.089 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:36.090 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:36.147 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:36 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 257'
    18:30:36.147 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 257, cap: 257/257, unwrapped: PooledUnsafeDirectByteBuf(ridx: 389, widx: 389, cap: 2048)), decoderResult: success)'
    18:30:36.147 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:36.153 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407: scenario=[Contract negotiation and file transfer], userId=1
    18:30:36.154 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:36.154 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:36.207 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:36 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 257'
    18:30:36.210 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 257, cap: 257/257, unwrapped: PooledUnsafeDirectByteBuf(ridx: 389, widx: 389, cap: 1024)), decoderResult: success)'
    18:30:36.210 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:37.161 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407: scenario=[Contract negotiation and file transfer], userId=1
    18:30:37.163 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:37.164 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:37.223 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:37 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 259'
    18:30:37.225 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 259, cap: 259/259, unwrapped: PooledUnsafeDirectByteBuf(ridx: 391, widx: 391, cap: 1024)), decoderResult: success)'
    18:30:37.227 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:38.162 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407: scenario=[Contract negotiation and file transfer], userId=1
    18:30:38.164 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:38.164 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:38.219 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:38 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 259'
    18:30:38.221 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 259, cap: 259/259, unwrapped: PooledUnsafeDirectByteBuf(ridx: 391, widx: 391, cap: 512)), decoderResult: success)'
    18:30:38.221 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:39.162 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407: scenario=[Contract negotiation and file transfer], userId=1
    18:30:39.163 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:39.163 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/contractnegotiations/a9bcd2bb-a6be-434d-b32c-b3ce4050b407 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:39.216 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:39 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 330'
    18:30:39.217 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 330, cap: 330/330, unwrapped: PooledUnsafeDirectByteBuf(ridx: 462, widx: 462, cap: 512)), decoderResult: success)'
    18:30:39.217 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:40.201 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Initiate file transfer uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess: scenario=[Contract negotiation and file transfer], userId=1
    18:30:40.201 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:40.202 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: PooledUnsafeDirectByteBuf(ridx: 0, widx: 453, cap: 1359))
    POST /api/v1/data/transferprocess HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191
    content-type: application/json
    content-length: 453, content=null}
    18:30:40.269 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:40 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 45'
    18:30:40.269 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 45, cap: 45/45, unwrapped: PooledUnsafeDirectByteBuf(ridx: 176, widx: 176, cap: 496)), decoderResult: success)'
    18:30:40.270 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:40.280 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:40.294 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:40.294 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:40.337 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:40 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 343'
    18:30:40.338 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 343, cap: 343/343, unwrapped: PooledUnsafeDirectByteBuf(ridx: 475, widx: 475, cap: 496)), decoderResult: success)'
    18:30:40.338 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:40.345 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:40.347 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:40.348 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:40.397 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:40 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 343'
    18:30:40.398 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 343, cap: 343/343, unwrapped: PooledUnsafeDirectByteBuf(ridx: 475, widx: 475, cap: 480)), decoderResult: success)'
    18:30:40.398 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool

    ================================================================================
    2022-04-28 18:30:40                                           5s elapsed
    ---- Requests ------------------------------------------------------------------
    > Global                                                   (OK=9      KO=0     )
    > Contract negotiation / Initiate contract negotiation     (OK=1      KO=0     )
    > Wait for agreement / Get status                          (OK=5      KO=0     )
    > Initiate transfer / Initiate file transfer               (OK=1      KO=0     )
    > Wait for transfer / Get transfer status                  (OK=2      KO=0     )

    ---- [Contract negotiation and file transfer] ----------------------------------
    [--------------------------------------------------------------------------]  0%
              waiting: 0      / active: 1      / done: 0     
    ================================================================================

    18:30:41.347 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:41.348 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:41.348 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:41.394 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:41 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 343'
    18:30:41.395 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 343, cap: 343/343, unwrapped: PooledUnsafeDirectByteBuf(ridx: 475, widx: 475, cap: 480)), decoderResult: success)'
    18:30:41.395 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:42.346 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:42.347 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:42.347 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:42.401 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:42 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 419'
    18:30:42.402 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 348, cap: 348/348, unwrapped: PooledUnsafeDirectByteBuf(ridx: 480, widx: 480, cap: 480)), decoderResult: success)'
    18:30:42.402 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 71, cap: 71/71, unwrapped: PooledUnsafeDirectByteBuf(ridx: 71, widx: 71, cap: 2048)), decoderResult: success)'
    18:30:42.403 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:43.349 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:43.349 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:43.350 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:43.399 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:43 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 419'
    18:30:43.401 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 419, cap: 419/419, unwrapped: PooledUnsafeDirectByteBuf(ridx: 551, widx: 551, cap: 2048)), decoderResult: success)'
    18:30:43.401 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:44.350 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:44.351 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:44.351 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:44.405 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:44 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 419'
    18:30:44.407 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 419, cap: 419/419, unwrapped: PooledUnsafeDirectByteBuf(ridx: 551, widx: 551, cap: 1024)), decoderResult: success)'
    18:30:44.411 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:45.352 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:45.353 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:45.354 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:45.397 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:45 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 419'
    18:30:45.399 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 419, cap: 419/419, unwrapped: PooledUnsafeDirectByteBuf(ridx: 551, widx: 551, cap: 1024)), decoderResult: success)'
    18:30:45.399 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool

    ================================================================================
    2022-04-28 18:30:45                                          10s elapsed
    ---- Requests ------------------------------------------------------------------
    > Global                                                   (OK=14     KO=0     )
    > Contract negotiation / Initiate contract negotiation     (OK=1      KO=0     )
    > Wait for agreement / Get status                          (OK=5      KO=0     )
    > Initiate transfer / Initiate file transfer               (OK=1      KO=0     )
    > Wait for transfer / Get transfer status                  (OK=7      KO=0     )

    ---- [Contract negotiation and file transfer] ----------------------------------
    [--------------------------------------------------------------------------]  0%
              waiting: 0      / active: 1      / done: 0     
    ================================================================================

    18:30:46.358 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:46.361 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:46.363 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:46.423 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:46 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 419'
    18:30:46.424 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 419, cap: 419/419, unwrapped: PooledUnsafeDirectByteBuf(ridx: 551, widx: 551, cap: 1024)), decoderResult: success)'
    18:30:46.424 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:47.361 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:47.362 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:47.363 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:47.412 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:47 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 417'
    18:30:47.413 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 417, cap: 417/417, unwrapped: PooledUnsafeDirectByteBuf(ridx: 549, widx: 549, cap: 1024)), decoderResult: success)'
    18:30:47.413 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:48.357 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:48.359 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:48.360 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:48.402 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:48 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 417'
    18:30:48.403 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 417, cap: 417/417, unwrapped: PooledUnsafeDirectByteBuf(ridx: 549, widx: 549, cap: 1024)), decoderResult: success)'
    18:30:48.403 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:49.359 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:49.360 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:49.361 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:49.406 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:49 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 417'
    18:30:49.407 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 417, cap: 417/417, unwrapped: PooledUnsafeDirectByteBuf(ridx: 549, widx: 549, cap: 1024)), decoderResult: success)'
    18:30:49.407 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:50.363 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:50.364 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:50.364 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:50.419 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:50 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 417'
    18:30:50.419 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 417, cap: 417/417, unwrapped: PooledUnsafeDirectByteBuf(ridx: 549, widx: 549, cap: 1024)), decoderResult: success)'
    18:30:50.420 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool

    ================================================================================
    2022-04-28 18:30:50                                          15s elapsed
    ---- Requests ------------------------------------------------------------------
    > Global                                                   (OK=19     KO=0     )
    > Contract negotiation / Initiate contract negotiation     (OK=1      KO=0     )
    > Wait for agreement / Get status                          (OK=5      KO=0     )
    > Initiate transfer / Initiate file transfer               (OK=1      KO=0     )
    > Wait for transfer / Get transfer status                  (OK=12     KO=0     )

    ---- [Contract negotiation and file transfer] ----------------------------------
    [--------------------------------------------------------------------------]  0%
              waiting: 0      / active: 1      / done: 0     
    ================================================================================

    18:30:51.365 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:51.367 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:51.368 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:51.427 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:51 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 417'
    18:30:51.427 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 417, cap: 417/417, unwrapped: PooledUnsafeDirectByteBuf(ridx: 549, widx: 549, cap: 1024)), decoderResult: success)'
    18:30:51.427 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:52.369 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:52.371 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:52.371 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:52.415 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:52 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 417'
    18:30:52.420 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 417, cap: 417/417, unwrapped: PooledUnsafeDirectByteBuf(ridx: 549, widx: 549, cap: 1024)), decoderResult: success)'
    18:30:52.421 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:53.371 [gatling-2-2] DEBUG io.gatling.http.engine.tx.HttpTxExecutor - Sending request=Get transfer status uri=http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191/api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055: scenario=[Contract negotiation and file transfer], userId=1
    18:30:53.375 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Retrieved HTTP/1 channel from pool for key ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}}
    18:30:53.378 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Write request WritableRequest{request=DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))
    GET /api/v1/data/transferprocess/5d9eb1e7-6fae-4a0b-9425-3b3c3b613055 HTTP/1.1
    accept: */*
    host: 313-company1-edc-mvd.northeurope.azurecontainer.io:9191, content=null}
    18:30:53.427 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)
    HTTP/1.1 200 OK
    Date: Thu, 28 Apr 2022 16:30:53 GMT
    Content-Type: application/json
    Server: Jetty(11.0.6)
    content-length: 417'
    18:30:53.428 [gatling-2-2] DEBUG io.gatling.http.client.impl.HttpAppHandler - Read msg='DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 417, cap: 417/417, unwrapped: PooledUnsafeDirectByteBuf(ridx: 549, widx: 549, cap: 1024)), decoderResult: success)'
    18:30:53.428 [gatling-2-2] DEBUG io.gatling.http.client.pool.ChannelPool - Offering channel entry ChannelPoolKey{clientId=1, remoteKey=RemoteKey{targetHostBaseUrl='http://313-company1-edc-mvd.northeurope.azurecontainer.io:9191', virtualHost='null', proxyHost='null', proxyPort=0}} to pool
    18:30:53.432 [gatling-2-2] DEBUG io.gatling.core.action.Exit - End user #1
    18:30:53.439 [GatlingSystem-akka.actor.default-dispatcher-6] DEBUG io.gatling.core.controller.inject.Injector - End user #[Contract negotiation and file transfer]
    18:30:53.440 [GatlingSystem-akka.actor.default-dispatcher-6] INFO io.gatling.core.controller.inject.Injector - All users of scenario [Contract negotiation and file transfer] are stopped
    18:30:53.442 [GatlingSystem-akka.actor.default-dispatcher-6] INFO io.gatling.core.controller.inject.Injector - Stopping
    18:30:53.444 [GatlingSystem-akka.actor.default-dispatcher-7] INFO io.gatling.core.controller.Controller - Injector has stopped, initiating graceful stop

    ================================================================================
    2022-04-28 18:30:53                                          17s elapsed
    ---- Requests ------------------------------------------------------------------
    > Global                                                   (OK=22     KO=0     )
    > Contract negotiation / Initiate contract negotiation     (OK=1      KO=0     )
    > Wait for agreement / Get status                          (OK=5      KO=0     )
    > Initiate transfer / Initiate file transfer               (OK=1      KO=0     )
    > Wait for transfer / Get transfer status                  (OK=14     KO=0     )
    > Transfer successful / Get transfer status                (OK=1      KO=0     )

    ---- [Contract negotiation and file transfer] ----------------------------------
    [##########################################################################]100%
              waiting: 0      / active: 0      / done: 1     
    ================================================================================

    18:30:53.470 [GatlingSystem-akka.actor.default-dispatcher-8] DEBUG io.gatling.core.controller.Controller - StatsEngine was stopped
    Simulation org.eclipse.dataspaceconnector.system.tests.local.BlobTransferLocalSimulation completed in 17 seconds
    18:30:53.499 [gatling-2-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: gatling-2-2
    18:30:53.540 [GatlingSystem-akka.actor.default-dispatcher-8] INFO akka.actor.CoordinatedShutdown - Running CoordinatedShutdown with reason [ActorSystemTerminateReason]
    Parsing log file(s)...
    18:30:53.584 [Test worker] INFO io.gatling.charts.stats.LogFileReader - Collected List(/Users/algattik/GitHub/MinimumViableDataspace/system-tests/build/reports/gatling/blobtransferlocalsimulation-20220428163034129/simulation.log) from blobtransferlocalsimulation-20220428163034129
    18:30:53.598 [Test worker] INFO io.gatling.charts.stats.LogFileReader - First pass
    18:30:53.608 [Test worker] INFO io.gatling.charts.stats.LogFileReader - First pass done: read 33 lines
    18:30:53.618 [Test worker] INFO io.gatling.charts.stats.LogFileReader - Second pass
    18:30:53.649 [Test worker] INFO io.gatling.charts.stats.LogFileReader - Second pass: read 33 lines
    Parsing log file(s) done
    Generating reports...
    18:30:53.866 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.866 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.867 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.870 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.870 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.870 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.870 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.870 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.870 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.871 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.871 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.871 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.872 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.872 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.
    18:30:53.872 [Test worker] DEBUG io.gatling.charts.report.StatsReportGenerator - Use group cumulated response time stats.

    ================================================================================
    ---- Global Information --------------------------------------------------------
    > request count                                         22 (OK=22     KO=0     )
    > min response time                                     44 (OK=44     KO=-     )
    > max response time                                    236 (OK=236    KO=-     )
    > mean response time                                    62 (OK=62     KO=-     )
    > std deviation                                         38 (OK=38     KO=-     )
    > response time 50th percentile                         55 (OK=55     KO=-     )
    > response time 75th percentile                         60 (OK=60     KO=-     )
    > response time 95th percentile                         68 (OK=68     KO=-     )
    > response time 99th percentile                        201 (OK=201    KO=-     )
    > mean requests/sec                                  1.222 (OK=1.222  KO=-     )
    ---- Response Time Distribution ------------------------------------------------
    > t < 800 ms                                            22 (100%)
    > 800 ms < t < 1200 ms                                   0 (  0%)
    > t > 1200 ms                                            0 (  0%)
    > failed                                                 0 (  0%)
    ================================================================================

    Reports generated in 0s.
    Please open the following file: /Users/algattik/GitHub/MinimumViableDataspace/system-tests/build/reports/gatling/blobtransferlocalsimulation-20220428163034129/index.html
    Transfer successful: count of successful events is 1.0 : true
    Global: max of response time is less than 5000.0 : true
    Global: percentage of successful events is 100.0 : true

BlobTransferIntegrationTest > transferBlob_success() FAILED
    org.opentest4j.AssertionFailedError at BlobTransferIntegrationTest.java:60

> Task :system-tests:test FAILED
3 actionable tasks: 3 executed
